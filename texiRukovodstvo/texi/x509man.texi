@node X509, req, CA, Top
@chapter X509

X509                             OpenSSL                            X509
@table @asis
@item NAME
       openssl-x509, x509 - Утилита отображения и подписи сертификатов

@item SYNOPSIS
       openssl x509 [@ref{x509 -help,,-help}] [@ref{x509 -inform DER|PEM,, -inform DER|PEM}] [@ref{x509 -outform DER|PEM,, -outform DER|PEM}] [@ref{x509 -keyform DER|PEM,, -keyform DER|PEM}] [-CAform DER|PEM] [-CAkeyform DER|PEM] [@ref{x509 -in filename,, -in filename}] [@ref{x509 -out filename,, -out filename}] [@ref{x509 -serial,, -serial}] [@ref{x509 -hash,, -hash}] [@ref{x509 -subject_hash,, -subject_hash}] [@ref{x509 -subject_hash_old,, -subject_hash_old}] [@ref{x509 -issuer_hash,, -issuer_hash}] [@ref{x509 -issuer_hash_old,, -issuer_hash_old}] [@ref{x509 -ocspid,, -ocspid}] [@ref{x509 -subject,, -subject}] [@ref{x509 -issuer,, -issuer}] [@ref{x509 -nameopt option,, -nameopt option}](NAMEOPT OPTIONS---[@ref{x509 compat,, compat}[@ref{x509 RFC2253,, RFC2253}][@ref{x509 oneline,, oneline}][@ref{x509 multiline,, multiline}][@ref{x509 esc_2253,, esc_2253}][@ref{x509 esc_2254,, esc_2254}][@ref{x509 esc_ctrl,, esc_ctrl}][@ref{x509 esc_msb,, esc_msb}][@ref{x509 use_quote,, use_quote}][@ref{x509 utf8,, utf8}][@ref{x509 ignore_type,, ignore_type}][@ref{x509 show_type,, show_type}][@ref{x509 dump_der,, dump_der}][@ref{x509 dump_nostr,, dump_nostr}][@ref{x509 dump_all,, dump_all}][@ref{x509 dump_unknown,, dump_unknown}][@ref{x509 sep_comma_plus, sep_comma_plus_space, sep_semi_plus_space,sep_multiline,, sep_comma_plus, sep_comma_plus_space, sep_semi_plus_space,sep_multiline}][@ref{x509 dn_rev,, dn_rev}][@ref{x509 nofname, sname, lname, oid,, nofname, sname, lname, oid}][@ref{x509 align,, align}][@ref{x509 space_eq,, space_eq}]]---NAMEOPT OPTIONS) [@ref{x509 -email,, -email}] [@ref{x509 -ocsp_uri,, -ocsp_uri}] [@ref{x509 -startdate,, -startdate}] [@ref{x509 -enddate,, -enddate}] [@ref{x509 -purpose,, -purpose}] [@ref{x509 -dates,, -dates}] [@ref{x509 -checkend arg,, -checkend arg}] [@ref{x509 -modulus,, -modulus}] [@ref{x509 -pubkey,, -pubkey}] [@ref{x509 -fingerprint,, -fingerprint}] [@ref{x509 -alias,, -alias}] [@ref{x509 -noout,, -noout}] [@ref{x509 -trustout,, -trustout}] [@ref{x509 -clrtrust,, -clrtrust}] [@ref{x509 -clrreject,, -clrreject}] [@ref{x509 -addtrust arg,, -addtrust arg}] [@ref{x509 -addreject arg,, -addreject arg}] [@ref{x509 -setalias arg,, -setalias arg}] [@ref{x509 -days arg,, -days arg}] [@ref{x509 -set_serial n,, -set_serial n}] [@ref{x509 -signkey filename,, -signkey filename}] [@ref{x509 -passin arg,, -passin arg}] [@ref{x509 -x509toreq,, -x509toreq}] [@ref{x509 -req,, -req}] [@ref{x509 -CA filename,, -CA filename}] [@ref{x509 -CAkey filename,, -CAkey filename}] [@ref{x509 -CAcreateserial,, -CAcreateserial}] [@ref{x509 -CAserial filename,, -CAserial filename}] [@ref{x509 -force_pubkey key,, -force_pubkey key}] [@ref{x509 -text,, -text}] (TEXT OPTIONS--- [[@ref{x509 compatible,, compatible}][@ref{x509 no_header,, no_header}][@ref{x509 no_version,, no_version}][@ref{x509 no_serial,, no_serial}][@ref{x509 no_signame,, no_signame}][@ref{x509 no_validity,, no_validity}][@ref{x509 no_subject,, no_subject}][@ref{x509 no_issuer,, no_issuer}][@ref{x509 no_pubkey,, no_pubkey}][@ref{x509 no_sigdump,, no_sigdump}][@ref{x509 no_aux,, no_aux}][@ref{x509 no_extensions,, no_extensions}][@ref{x509 ext_default,, ext_default}][@ref{x509 ext_error,, ext_error}][@ref{x509 ext_parse,, ext_parse}][@ref{x509 ext_dump,, ext_dump}][@ref{x509 ca_default,, ca_default}]] ---TEXT OPTIONS) [@ref{x509 -ext extensions,, -ext extensions}] [@ref{x509 -certopt option,, -certopt option}] [@ref{x509 -C,, -C}] [@ref{x509 -digest,, -digest}] [@ref{x509 -clrext,, -clrext}] [@ref{x509 -extfile filename,, -extfile filename}] [@ref{x509 -extensions section,, -extensions section}] [@ref{x509 -rand file...,, -rand file...}]  [@ref{x509 [-writerand file],, [-writerand file]}] [@ref{x509 -engine id,, -engine id}] [@ref{x509 -preserve_dates,, -preserve_dates}]

@item DESCRIPTION
       Команда x509 - это утилита многоцелевого сертификата. Его можно
       использовать для отображения информации о сертификате, преобразования
       сертификатов в различные формы, подписания запросов на сертификаты,
       таких как "mini CA", или редактирования настроек доверия сертификатов.

       Поскольку существует большое количество параметров, они будут разбиты
       на различные разделы.

@item OPTIONS
       Параметры ввода, вывода и общего назначения
@table @asis
@item -help @anchor{x509 -help}
           Распечатайте сообщение об использовании.

@item -inform DER|PEM @anchor{x509 -inform DER|PEM}
           Это указывает формат ввода, обычно команда ожидает сертификат X509,
           но это может измениться, если присутствуют другие параметры, такие
           как -req. Формат DER - это кодировка сертификата DER, а PEM -
           кодировка base64 кодировки DER с добавлением строк верхнего и
           нижнего колонтитула. Формат по умолчанию - PEM.

@item      -outform DER|PEM @anchor{x509 -outform DER|PEM}
           Это определяет формат вывода, параметры имеют то же значение и значение
           по умолчанию, что и опция -inform.

@item      -in filename @anchor{x509 -in filename}
           Здесь указывается имя входного файла для чтения сертификата или
           стандартного ввода, если эта опция не указана.

@item       -out filename @anchor{x509 -out filename}
           Это указывает имя выходного файла для записи или стандартный вывод
           по умолчанию.

@item       -digest @anchor{x509 -digest}
           Дайджест для использования. Это влияет на любой параметр подписи или
           отображения, использующий дайджест сообщения, например параметры
           -fingerprint, -signkey и -CA. Можно использовать любой дайджест,
           поддерживаемый командой OpenSSL dgst. Если не указано иное,
           SHA1 используется с -fingerprint или используется дайджест по
           умолчанию для алгоритма подписи, обычно SHA256.

@item       -rand file... @anchor{x509 -rand file...}
           Файл или файлы, содержащие случайные данные, используемые для заполнения
           генератора случайных чисел. Можно указать несколько файлов, разделенных
           символом, зависящим от ОС. Разделителем является ; for MS-Windows,
           , for OpenVMS, и : для остальных.

@item       [-writerand file] @anchor{x509 [-writerand file]}
           Записывает случайные данные в указанный файл при выходе. Это может быть
           использовано с последующим флагом -rand.

@item       -engine id @anchor{x509 -engine id}
           Указание обработчика (по его уникальной строке идентификатора) приведет
           к тому, что x509 попытается получить функциональную ссылку на указанный
           обработчик, тем самым инициализируя его при необходимости. Движок будет
           установлен по умолчанию для всех доступных алгоритмов.

@item       -preserve_dates @anchor{x509 -preserve_dates}
           При подписании сертификата сохраняйте даты "notBefore" и "notAfter"
           вместо их настройки на текущее время и продолжительность. Не может
           использоваться с опцией -days.
@end table
@item Display Options
       Примечание: параметры -alias и -purpose также являются параметрами отображения,
       но описаны в разделе TRUST SETTINGS.
@table @asis
@item       -text @anchor{x509 -text}
           Распечатывает сертификат в текстовом виде. Выводятся полные сведения,
           включая открытый ключ, алгоритмы подписи, имена эмитента и субъекта,
           серийный номер, любые имеющиеся расширения и любые параметры доверия.

@item       -ext extensions @anchor{x509 -ext extensions}
           Распечатывает расширения сертификата в текстовом виде. Расширения
           указываются через запятую, например, "subjectAltName,subjectKeyIdentifier".
           См. Страницу руководства x509v3_config для имен расширений.

@item       -certopt option @anchor{x509 -certopt option}
           Настройте формат вывода, используемый с -text. Аргументом опции может
           быть одна опция или несколько опций, разделенных запятыми. Переключатель
           -certopt также можно использовать более одного раза для установки нескольких
           параметров. Смотрите раздел TEXT OPTIONS для получения дополнительной
           информации.

@item       -noout @anchor{x509 -noout}
           Эта опция предотвращает вывод закодированной версии запроса.

@item       -pubkey @anchor{x509 -pubkey}
           Выводит блок SubjectPublicKeyInfo сертификата в формате PEM.

@item       -modulus @anchor{x509 -modulus}
           Эта опция выводит значение модуля открытого ключа, содержащегося в
           сертификате.

@item       -serial @anchor{x509 -serial}
           Выводит серийный номер сертификата.

@item       -subject_hash @anchor{x509 -subject_hash}
           Выводит "hash" имени субъекта сертификата. Это используется в OpenSSL
           для формирования индекса, позволяющего искать сертификаты в каталоге
           по имени субъекта.

@item       -issuer_hash @anchor{x509 -issuer_hash}
           Выводит "hash" имени издателя сертификата.

@item       -ocspid @anchor{x509 -ocspid}
           Выводит значения хеша OCSP для имени субъекта и открытого ключа.

@item       -hash @anchor{x509 -hash}
           Синоним "-subject_hash" по причинам обратной совместимости.

@item       -subject_hash_old @anchor{x509 -subject_hash_old}
           Выводит "hash" имени субъекта сертификата, используя более старый алгоритм,
           который использовался OpenSSL до версии 1.0.0.

@item       -issuer_hash_old @anchor{x509 -issuer_hash_old}
           Выводит "hash" имени издателя сертификата, используя более старый алгоритм,
           который использовался OpenSSL до версии 1.0.0.

@item       -subject @anchor{x509 -subject}
           Выводит имя субъекта.

@item       -issuer @anchor{x509 -issuer}
           Выводит имя эмитента.

@item       -nameopt option @anchor{x509 -nameopt option}
           Опция, которая определяет, как отображаются имена субъекта или эмитента.
           Аргументом опции может быть одна опция или несколько опций, разделенных
           запятыми. В качестве альтернативы опция -nameopt может использоваться
           более одного раза для установки нескольких параметров. Смотрите раздел
           NAME OPTIONS для получения дополнительной информации.

@item       -email @anchor{x509 -email}
           Выводит адреса электронной почты, если таковые имеются.

@item       -ocsp_uri @anchor{x509 -ocsp_uri}
           Выводит адрес(а) респондента OCSP, если есть.

@item       -startdate @anchor{x509 -startdate}
           Распечатывает дату начала сертификата, то есть дату notBefore.

@item       -enddate @anchor{x509 -enddate}
           Распечатывает срок действия сертификата, то есть дату notAfter.

@item       -dates @anchor{x509 -dates}
           Распечатывает даты начала и окончания срока действия сертификата.

@item       -checkend arg @anchor{x509 -checkend arg}
           Проверяет, истекает ли срок действия сертификата в течение
           следующих arg секунд, и выходит ли он ненулевым, если да,
           истекает или ноль, если нет.

@item       -fingerprint @anchor{x509 -fingerprint}
           Вычисляет и выводит дайджест версии всего сертификата в кодировке
           DER (см. Параметры дайджеста). Это обычно называется "fingerprint".
           Из-за характера дайджестов сообщений отпечаток сертификата
           является уникальным для этого сертификата, и два сертификата
           с одинаковым отпечатком могут считаться одинаковыми.

@item       -C @anchor{x509 -C}  Это выводит сертификат в виде исходного файла C.
@end table
@item   Trust Settings
       Доверенный сертификат - это обычный сертификат, к которому прикреплено
       несколько дополнительных частей информации, таких как разрешенное
       и запрещенное использование сертификата и объект "alias".

       Обычно, когда сертификат проверяется, по крайней мере один
       сертификат должен быть "trusted". По умолчанию доверенный
       сертификат должен храниться локально и должен быть корневым CA:
       любая цепочка сертификатов, оканчивающаяся на этом CA,
       может быть использована для любых целей.

       Настройки Trust в настоящее время используются только с корневым CA.
       Они позволяют лучше контролировать цели, для которых может использоваться
       корень CA. Например, CA может быть доверенным для клиента SSL, но
       не для использования сервера SSL.

       См. Описание утилиты проверки для получения дополнительной информации
       о значении параметров доверия.

       Будущие версии OpenSSL будут распознавать параметры доверия для любого
       сертификата: не только для корневых CA.
@table @asis
@item       -trustout @anchor{x509 -trustout}
           Это заставляет x509 выводить доверенный сертификат. Может быть введен
           обычный или доверенный сертификат, но по умолчанию выводится обычный
           сертификат, а любые параметры доверия отбрасываются. С опцией
           -trustout выводится доверенный сертификат. Доверенный сертификат
           автоматически выводится при изменении любых параметров доверия.

@item       -setalias arg @anchor{x509 -setalias arg}
           Устанавливает псевдоним сертификата. Это позволит ссылаться на сертификат,
           используя псевдоним, например, "Steve's Certificate".

@item       -alias @anchor{x509 -alias}
           Выводит псевдоним сертификата, если есть.

@item       -clrtrust @anchor{x509 -clrtrust}
           Удаляет все разрешенные или доверенные виды использования сертификата.

@item       -clrreject @anchor{x509 -clrreject}
           Удаляет все запрещенные или отклоненные использования сертификата.

@item       -addtrust arg @anchor{x509 -addtrust arg}
           Добавляет доверенный сертификат использования. Здесь можно использовать
           любое имя объекта, но в настоящее время используются только
           clientAuth (SSL client use), serverAuth (SSL server use),
           emailProtection (S/MIME email) и anyExtendedKeyUsage. Начиная с
           OpenSSL 1.1.0, последний из этих блоков блокирует все цели при
           отклонении или разрешает все цели при наличии доверия. Другие
           приложения OpenSSL могут определять дополнительное использование.

@item       -addreject arg @anchor{x509 -addreject arg}
           Добавляет запрещенное использование. Он принимает те же значения,
           что и опция -addtrust.

@item       -purpose @anchor{x509 -purpose}
           Эта опция выполняет тестирование расширений сертификата и выводит
           результаты. Для более полного описания смотрите раздел
           CERTIFICATE EXTENSIONS.
@end table
@item   Signing Options
       Утилита x509 может использоваться для подписи сертификатов и запросов:
       она может вести себя как "mini CA".
@table @asis
@item       -signkey filename @anchor{x509 -signkey filename}
           Эта опция заставляет входной файл быть самоподписанным, используя
           предоставленный закрытый ключ.

           Если входной файл является сертификатом, он устанавливает имя
           эмитента на имя субъекта (т.е. делает его самоподписанным),
           изменяет открытый ключ на предоставленное значение и изменяет
           даты начала и окончания. Дата начала устанавливается на текущее
           время, а дата окончания устанавливается на значение, определенное
           параметром -days. Любые расширения сертификата сохраняются, если
           не указана опция -clrext; это включает, например, любые
           существующие расширения идентификатора ключа.

           Если вход представляет собой запрос сертификата, то самозаверяющий
           сертификат создается с использованием предоставленного закрытого ключа
           с использованием имени субъекта в запросе.

@item       -passin arg @anchor{x509 -passin arg}
           Ключевой источник пароля. Для получения дополнительной информации о
           формате arg см. Раздел PASS PHRASE ARGUMENTS в openssl(1).

@item       -clrext @anchor{x509 -clrext}
           Удалите все расширения из сертификата. Эта опция используется, когда
           сертификат создается из другого сертификата (например, с опциями
           -signkey или -CA). Обычно все расширения сохраняются.

@item       -keyform PEM|DER @anchor{x509 -keyform DER|PEM}
           Определяет формат (DER или PEM) файла закрытого ключа, используемого
           в опции -signkey.

@item       -days arg @anchor{x509 -days arg}
           Задает количество дней, в течение которых сертификат действителен. По
           умолчанию 30 дней. Не может использоваться с опцией -preserve_dates.

@item       -x509toreq @anchor{x509 -x509toreq}
           Преобразует сертификат в запрос сертификата. Опция -signkey используется
           для передачи требуемого закрытого ключа.

@item       -req @anchor{x509 -req}
           По умолчанию ожидается сертификат на входе. С этой опцией вместо этого
           ожидается запрос сертификата.

@item       -set_serial n @anchor{x509 -set_serial n}
           Указывает серийный номер для использования. Эта опция может использоваться
           либо с опциями -signkey или -CA. Если используется вместе с опцией -CA,
           файл серийного номера (как указано в опциях -CAserial или -CAcreateserial)
           не используется.

           Серийный номер может быть десятичным или шестнадцатеричным
           (если ему предшествует 0x).

@item       -CA filename @anchor{x509 -CA filename}
           Указывает сертификат CA, который будет использоваться для подписи. Когда
           эта опция присутствует, x509 ведет себя как "mini CA". Входной файл
           подписывается этим CA с использованием этой опции: это означает, что
           его имя издателя установлено на имя субъекта CA, и он имеет цифровую
           подпись с использованием закрытого ключа CA.

           Эта опция обычно сочетается с опцией -req. Без опции -req вход является
           сертификатом, который должен быть самозаверяющим.

@item       -CAkey filename @anchor{x509 -CAkey filename}
           Устанавливает закрытый ключ CA для подписи сертификата. Если эта опция
           не указана, предполагается, что закрытый ключ CA присутствует в файле
           сертификата CA.

@item       -CAserial filename @anchor{x509 -CAserial filename}
           Устанавливает файл серийного номера CA для использования.

           Когда опция -CA используется для подписи сертификата, она использует
           серийный номер, указанный в файле. Этот файл состоит из одной строки,
           содержащей четное число шестнадцатеричных цифр с используемым серийным
           номером. После каждого использования серийный номер увеличивается и
           снова записывается в файл.

           Имя файла по умолчанию состоит из базового имени файла сертификата CA
           с добавлением ".srl". Например, если файл сертификата CA называется
           "mycacert.pem", он ожидает найти файл серийного номера с именем
           "mycacert.srl".

@item       -CAcreateserial @anchor{x509 -CAcreateserial}
           С помощью этой опции файл серийного номера CA создается, если он не
           существует: он будет содержать серийный номер "02", а подписываемый
           сертификат будет иметь 1 в качестве серийного номера. Если указана
           опция -CA и файл серийного номера не существует, генерируется
           случайное число; это рекомендуемая практика.

@item       -extfile filename @anchor{x509 -extfile filename}
           Файл, содержащий расширения сертификата для использования. Если не
           указано иное, расширения не добавляются в сертификат.

@item       -extensions section @anchor{x509 -extensions section}
           Раздел для добавления расширений сертификатов. Если эта опция не указана,
           то расширения должны содержаться либо в безымянном (по умолчанию) section,
           либо в section по умолчанию должна содержаться переменная с именем
           "extensions", которая содержит section для использования. Обратитесь к
           странице справочника x509v3_config за подробностями формата раздела
           расширения.

@item       -force_pubkey key @anchor{x509 -force_pubkey key}
           Когда сертификат создан, установите его открытый ключ на ключ вместо
           ключа в сертификате или запросе сертификата. Эта опция полезна для
           создания сертификатов, где алгоритм обычно не может подписывать
           запросы, например, DH.

           Формат или ключ можно указать с помощью опции -keyform.
@end table
@item   Name Options
       Параметр командной строки nameopt определяет способ отображения имен
       субъекта и эмитента. Если переключатель nameopt отсутствует,
       используется формат "oneline" по умолчанию, который совместим с
       предыдущими версиями OpenSSL. Каждый параметр подробно описан ниже,
       всем параметрам может предшествовать a- чтобы отключить параметр. Обычно
       будут использоваться только первые четыре.
@table @asis
@item       compat @anchor{x509 compat}
           Используйте старый формат.

@item       RFC2253 @anchor{x509 RFC2253}
           Отображает имена, совместимые с RFC2253, эквивалентные esc_2253, esc_ctrl,
           esc_msb, utf8, dump_nostr, dump_unknown, dump_der, sep_comma_plus,
           dn_rev и sname.

@item       oneline @anchor{x509 oneline}
           Онлайновый формат, более читабельный, чем RFC2253. Это эквивалентно
           указанию параметров esc_2253, esc_ctrl, esc_msb, utf8, dump_nostr,
           dump_der, use_quote, sep_comma_plus_space, space_eq и sname. Это
           значение по умолчанию, при котором параметры имени не указываются явно.

@item       multiline @anchor{x509 multiline}
           Многострочный формат. Это эквивалентно esc_ctrl, esc_msb, sep_multiline,
           space_eq, lname и align.

@item       esc_2253 @anchor{x509 esc_2253}
           Экранируйте символы "special", необходимые для RFC2253 в поле.
           Это ,+"<>;. Кроме того, # экранируется в начале строки и пробел
           в начале или конце строки.

@item       esc_2254 @anchor{x509 esc_2254}
           Экранируйте символы "special", необходимые для RFC2254 в поле. Это
           символ NUL, такой же, как и ()*.

@item       esc_ctrl @anchor{x509 esc_ctrl}
           Побег управляющих персонажей. Это те, у которых значения ASCII меньше,
           чем 0x20 (пробел) и символ удаления (0x7f). Они экранируются с
           использованием записи RFC2253 /XX (где XX - две шестнадцатеричные
           цифры, представляющие значение символа).

@item       esc_msb @anchor{x509 esc_msb}
           Экранировать символы с установленным MSB, то есть со значениями ASCII
           больше, чем 127.

@item       use_quote @anchor{x509 use_quote}
           Избегает некоторых символов, окружая всю строку символами ", без
           опции все экранирование выполняется с помощью символа /.

@item       utf8 @anchor{x509 utf8}
           Сначала преобразуйте все строки в формат UTF8. Это требуется для
           RFC2253. Если вам повезло иметь совместимый с UTF8 терминал, то
           использование этой опции (а не установка esc_msb) может привести
           к правильному отображению многобайтовых (международных) символов.
           Если эта опция отсутствует, то многобайтовые символы больше 0xff
           будут представлены в формате /UXXXX для битов 16 и /WXXXXXXXX для
           битов 32. Кроме того, если эта опция отключена, любой
           UTF8Strings будет сначала преобразован в их символьную форму.

@item       ignore_type @anchor{x509 ignore_type}
           Эта опция никак не пытается интерпретировать многобайтовые символы.
           То есть их октеты содержимого просто сбрасываются, как будто один
           октет представляет каждого символа. Это полезно для диагностических
           целей, но приведет к довольно странным результатам.

@item       show_type @anchor{x509 show_type}
           Показать тип строки символов ASN1. Тип предшествует содержимому поля.
           Например, "BMPSTRING: Hello World".

@item       dump_der @anchor{x509 dump_der}
           Когда эта опция установлена, любые поля, которые должны быть
           зашифрованы, будут выгружаться с использованием кодировки поля DER.
           В противном случае будут отображаться только октеты содержимого.
           Оба варианта используют формат RFC2253 #XXXX....

@item       dump_nostr @anchor{x509 dump_nostr}
           Дамп не символьных строковых типов (например, OCTET STRING), если
           эта опция не установлена, тогда не символьные строковые типы будут
           отображаться так, как если бы каждый октет содержимого представлял
           один символ.

@item       dump_all @anchor{x509 dump_all}
           Дамп всех полей. Эта опция при использовании с dump_der позволяет
           однозначно определить кодировку структуры DER.

@item       dump_unknown @anchor{x509 dump_unknown}
           Дамп любого поля, OID которого не распознается OpenSSL.

@item       sep_comma_plus, sep_comma_plus_space, sep_semi_plus_space,sep_multiline @anchor{x509 sep_comma_plus, sep_comma_plus_space, sep_semi_plus_space,sep_multiline}
           Эти параметры определяют разделители полей. Первый символ находится
           между RDNs, а второй между несколькими AVAs (множественные AVAs очень
           редки и их использование не рекомендуется). Опции, оканчивающиеся на
           "space", дополнительно помещают пробел после разделителя, чтобы
           сделать его более читаемым. Объект sep_multiline использует символ
           перевода строки для разделителя RDN и интервал + для разделителя AVA.
           Он также выравнивает поля четырьмя символами. Если разделитель полей
           не указан, по умолчанию используется sep_comma_plus_space.

@item       dn_rev @anchor{x509 dn_rev}
           Поменяйте местами поля DN. Это требуется для RFC2253. В качестве
           побочного эффекта это также меняет порядок краткого AVAs, но это
           допустимо.

@item       nofname, sname, lname, oid @anchor{x509 nofname, sname, lname, oid}
           Эти параметры изменяют способ отображения имени поля. nofname
           вообще не отображает поле. sname использует форму "short name"
           (например, CN для commonName). lname использует длинную форму.
           oid представляет OID в числовой форме и полезен для диагностических
           целей.

@item       align @anchor{x509 align}
           Выровняйте значения полей для более удобочитаемого вывода.
           Используется только с sep_multiline.

@item       space_eq @anchor{x509 space_eq}
           Размещает пробелы вокруг символа =, который следует за именем поля.
@end table
@item   Text Options
       Наряду с настройкой формата вывода имени, также можно настроить
       фактические поля, напечатанные с использованием параметров certopt,
       когда присутствует текстовый параметр. Поведение по умолчанию -
       печать всех полей.
@table @asis
@item       compatible @anchor{x509 compatible}
           Используйте старый формат. Это эквивалентно тому, что вообще не
           указывается никаких параметров вывода.

@item       no_header @anchor{x509 no_header}
           Не печатайте информацию заголовка: это строки, обозначающие
           "Certificate" и "Data".

@item       no_version @anchor{x509 no_version}
           Не печатайте номер версии.

@item       no_serial @anchor{x509 no_serial}
           Не печатайте серийный номер.

@item       no_signame @anchor{x509 no_signame}
           Не распечатывайте используемый алгоритм подписи.

@item       no_validity @anchor{x509 no_validity}
           Не печатайте валидность, это поля notBefore и notAfter.

@item       no_subject @anchor{x509 no_subject}
           Не печатайте имя subject.

@item       no_issuer @anchor{x509 no_issuer}
           Не печатайте имя issuer.

@item       no_pubkey @anchor{x509 no_pubkey}
           Не распечатывайте public key.

@item       no_sigdump @anchor{x509 no_sigdump}
           Не распечатывайте шестнадцатеричный дамп подписи сертификата.

@item       no_aux @anchor{x509 no_aux}
           Не распечатывайте информацию о доверии сертификата.

@item       no_extensions @anchor{x509 no_extensions}
           Не печатайте никаких расширений X509V3.

@item       ext_default @anchor{x509 ext_default}
           Сохранение поведения расширения по умолчанию: попытка
           распечатать неподдерживаемые расширения сертификата.

@item       ext_error @anchor{x509 ext_error}
           Распечатайте сообщение об ошибке для неподдерживаемых
           расширений сертификата.

@item       ext_parse @anchor{x509 ext_parse}
           ASN1 анализирует неподдерживаемые расширения.

@item       ext_dump @anchor{x509 ext_dump}
           Hex dump неподдерживаемые расширения.

@item       ca_default @anchor{x509 ca_default}
           Значение, используемое утилитой ca, эквивалентно no_issuer,
           no_pubkey, no_header, и no_version.
@end table
@item EXAMPLES
       Примечание: в этих примерах '\' означает, что пример должен
       быть в одной строке.
@table @asis
@item       Показать содержимое сертификата:

        openssl x509 -in cert.pem -noout -text

@item       Показать расширение сертификата "Subject Alternative Name":

        openssl x509 -in cert.pem -noout -ext subjectAltName

@item       Показать больше расширений сертификата:

        openssl x509 -in cert.pem -noout -ext subjectAltName,nsCertType

@item       Показать серийный номер сертификата:

        openssl x509 -in cert.pem -noout -serial

@item       Вывести имя субъекта сертификата:

        openssl x509 -in cert.pem -noout -subject

@item       Отобразить имя субъекта сертификата в форме RFC2253:

        openssl x509 -in cert.pem -noout -subject -nameopt RFC2253

@item       Выведите имя субъекта сертификата в oneline форме на терминале, поддерживающем UTF8:

        openssl x509 -in cert.pem -noout -subject -nameopt oneline,-esc_msb

@item       Покажите сертификат SHA1 по отпечатку пальца:

        openssl x509 -sha1 -in cert.pem -noout -fingerprint

@item       Преобразовать сертификат из формата PEM в формат DER:

        openssl x509 -in cert.pem -inform PEM -out cert.der -outform DER

@item       Преобразовать сертификат в запрос сертификата:

        openssl x509 -x509toreq -in cert.pem -out req.pem -signkey key.pem

@item       Преобразуйте запрос сертификата в самоподписанный сертификат, используя расширения для CA:

        openssl x509 -req -in careq.pem -extfile openssl.cnf -extensions v3_ca \@*
               -signkey key.pem -out cacert.pem

@item       Подпишите запрос на сертификат, используя вышеуказанный сертификат CA, и добавьте расширения сертификата пользователя:

        openssl x509 -req -in req.pem -extfile openssl.cnf -extensions v3_usr \@*
               -CA cacert.pem -CAkey key.pem -CAcreateserial

@item       Установите сертификат как надежный для использования клиентом SSL и измените его псевдоним на "Steve's Class 1 CA"

        openssl x509 -in cert.pem -addtrust clientAuth \@*
               -setalias "Steve's Class 1 CA" -out trust.pem
@end table
@item NOTES
@table @asis
@item Формат PEM использует строки верхнего и нижнего колонтитула:

        -----BEGIN CERTIFICATE-----
        -----END CERTIFICATE-----

@item       он также будет обрабатывать файлы, содержащие:

        -----BEGIN X509 CERTIFICATE-----
        -----END X509 CERTIFICATE-----

@item       Доверенные сертификаты имеют строки

        -----BEGIN TRUSTED CERTIFICATE-----
        -----END TRUSTED CERTIFICATE-----
@end table
       Преобразование в формат UTF8, используемый с опциями имени,
       предполагает, что T61Strings использует набор символов
       ISO8859-1. Это неправильно, но Netscape и MSIE делают это так же,
       как и многие сертификаты. Поэтому, хотя это неверно, более
       вероятно, что большинство сертификатов будет отображаться правильно

       Опция -email ищет имя субъекта и расширение альтернативного имени
       субъекта. Будут распечатаны только уникальные адреса электронной почты:
       один и тот же адрес не будет напечатан более одного раза.

@item CERTIFICATE EXTENSIONS
       Опция -purpose проверяет расширения сертификата и определяет, для чего
       сертификат может использоваться. Фактические проверки довольно сложны
       и включают различные способы взлома и обходные пути для обработки
       поврежденных сертификатов и программного обеспечения.

       Тот же код используется при проверке недоверенных сертификатов в цепочках,
       поэтому этот раздел полезен, если цепочка отклоняется кодом проверки.

       Флаг CA расширения basicConstraints используется для определения, может ли
       сертификат использоваться в качестве CA. Если флаг CA имеет значение true,
       то это CA, если флаг CA имеет значение false, то это не CA. Все CAs должны
       иметь флаг CA, установленный в true.

       Если расширение basicConstraints отсутствует, то сертификат считается
       "possible CA", другие расширения проверяются в соответствии с
       предполагаемым использованием сертификата. В этом случае выдается
       предупреждение, потому что сертификат на самом деле не должен
       рассматриваться как CA: однако он может быть CA для работы с неработающим
       программным обеспечением.

       Если сертификат является сертификатом V1 (и, следовательно, не имеет
       расширений) и самоподписан, предполагается, что он также является CA, но
       снова выдается предупреждение: это позволяет обойти проблему с корнями
       Verisign, которые являются самозаверяющими сертификатами V1 ,

       Если расширение keyUsage присутствует, тогда применяются дополнительные
       ограничения на использование сертификата. Сертификат CA должен иметь
       установленный бит keyCertSign, если присутствует расширение keyUsage.

       Расширение использования расширенного ключа накладывает дополнительные
       ограничения на использование сертификата. Если это расширение присутствует
       (критическое или нет), ключ может использоваться только для указанных целей.

       Полное описание каждого теста приведено ниже. Комментарии относительно базовых
       ограничений и сертификатов keyUsage и V1, приведенные выше, относятся ко всем
       сертификатам CA.
@table @asis
@item       SSL Client
           Расширение расширенного использования ключа должно отсутствовать или
           включать "web client authentication" OID. keyUsage должен отсутствовать
           или должен иметь установленный бит digitalSignature. Тип сертификата
           Netscape должен отсутствовать или в нем должен быть установлен бит
           клиента SSL.

@item       SSL Client CA
           Расширение расширенного использования ключа должно отсутствовать или
           включать "web client authentication" OID. Тип сертификата Netscape должен
           отсутствовать или должен иметь установленный бит SSL CA: это используется
           в качестве обходного пути, если расширение basicConstraints отсутствует.

@item       SSL Server
           Расширение расширенного использования ключа должно отсутствовать или
           включать "web server authentication" и / или один из SGC OIDs. keyUsage
           должен отсутствовать или должен иметь digitalSignature, установленный
           keyEncipherment или оба установленных бита. Тип сертификата Netscape
           должен отсутствовать или иметь установленный бит сервера SSL.

@item       SSL Server CA
           Расширение расширенного использования ключа должно отсутствовать или
           включать "web server authentication" и / или один из SGC OIDs. Тип
           сертификата Netscape должен отсутствовать или должен быть установлен
           бит SSL CA: это используется в качестве обходного пути, если расширение
           basicConstraints отсутствует.

@item       Netscape SSL Server
           Чтобы клиенты Netscape SSL могли подключаться к серверу SSL, он должен
           иметь установленный бит keyEncipherment, если присутствует расширение
           keyUsage. Это не всегда верно, потому что некоторые комплекты шифров
           используют ключ для цифровой подписи. В остальном он такой же, как
           обычный сервер SSL.

@item       Common S/MIME Client Tests
           Расширение расширенного использования ключа должно отсутствовать или
           включать "email protection" OID. Тип сертификата Netscape должен
           отсутствовать или должен иметь установленный бит S/MIME. Если бит типа
           S/MIME не установлен в типе сертификата Netscape, тогда бит клиента SSL
           допускается в качестве альтернативы, но отображается предупреждение: это
           связано с тем, что некоторые сертификаты Verisign не устанавливают бит
           S/MIME.

@item       S/MIME Signing
           В дополнение к обычным тестам клиента S/MIME необходимо установить бит
           digitalSignature или бит nonRepudiation, если присутствует расширение keyUsage.

@item       S/MIME Encryption
           В дополнение к обычным тестам S/MIME должен быть установлен бит
           keyEncipherment, если присутствует расширение keyUsage.

@item       S/MIME CA
           Расширение расширенного использования ключа должно отсутствовать или
           включать "email protection" OID. Тип сертификата Netscape должен
           отсутствовать или должен иметь установленный бит S/MIME CA: это
           используется как обходной путь, если расширение basicConstraints
           отсутствует.

@item       CRL Signing
           Расширение keyUsage должно отсутствовать или в нем должен быть
           установлен бит подписи CRL.

@item       CRL Signing CA
           Применяются обычные тесты CA. За исключением этого случая должно
           присутствовать расширение basicConstraints.
@end table
@item BUGS
       Расширения в сертификатах не переносятся в запросы сертификатов и наоборот.

       Можно создать недействительные сертификаты или запросы, указав неправильный
       закрытый ключ или в некоторых случаях используя несовместимые параметры: они
       должны быть проверены.

       Должны быть опции для явной установки таких вещей, как даты начала и окончания,
       а не смещение от текущего времени.

@item SEE ALSO
       req(1), ca(1), genrsa(1), gendsa(1), verify(1), x509v3_config(5)

@item HISTORY
       Алгоритм хеширования, использовавшийся в параметрах -subject_hash и
       -issuer_hash до OpenSSL 1.0.0, был основан на устаревшем алгоритме MD5 и
       кодировании различаемого имени. В OpenSSL 1.0.0 и более поздних версиях он
       основан на канонической версии DN с использованием SHA1. Это означает, что
       любые каталоги, использующие старую форму, должны перестраивать свои ссылки,
       используя c_rehash или аналогичные.

@item COPYRIGHT
       Copyright 2000-2018 The OpenSSL Project Authors. All Rights Reserved.
@sp 1
       Licensed under the OpenSSL license (the "License").  You may not use
       this file except in compliance with the License.  You can obtain a copy
       in the file LICENSE in the source distribution or at
       <https://www.openssl.org/source/license.html>.
@sp 1
1.1.1a                            2018-11-20                           X509(1)
@end table
