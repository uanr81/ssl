DGST(1)                             OpenSSL                            DGST(1)

NAME
       openssl-dgst, dgst - выполнять операции дайджеста

SYNOPSIS
       openssl dgst [-digest] [-help] [-c] [-d] [-hex] [-binary] [-r] [-out
       filename] [-sign filename] [-keyform arg] [-passin arg] [-verify
       filename] [-prverify filename] [-signature filename] [-hmac key]
       [-fips-fingerprint] [-rand file...]  [-engine id] [-engine_impl]
       [file...]

       openssl digest [...]

DESCRIPTION
       Функции дайджеста выводят дайджест сообщения предоставленного файла или файлов
       в шестнадцатеричном формате. Функции дайджеста также генерируют и проверяют
       цифровые подписи, используя дайджесты сообщений.

       Общее имя, dgst, может использоваться с опцией, определяющей алгоритм,
       который будет использоваться. Дайджест по умолчанию - sha256. В качестве
       имени команды также может использоваться поддерживаемое имя дайджеста.
       Чтобы увидеть список поддерживаемых алгоритмов, используйте команду list
       --digest-commands.

OPTIONS
       -help
           Распечатайте сообщение об использовании.

       -digest
           Указывает имя поддерживаемого дайджеста, который будет использоваться.
           Чтобы увидеть список поддерживаемых дайджестов, используйте список команд
           --digest-commands.

       -c
           Распечатайте дайджест в виде двухзначных групп, разделенных двоеточиями,
           которые актуальны только при использовании вывода в шестнадцатеричном формате.

       -d
           Распечатать отладочную информацию BIO.

       -hex
           Дайджест должен быть выведен как шестнадцатеричный дамп. Это случайное
           значение по умолчанию для дайджеста "normal", а не цифровой подписи.
           Смотри NOTES ниже для цифровых подписей, использующих -hex.

       -binary
           Вывести дайджест или подпись в двоичном виде.

       -r  Выведите дайджест в формате "coreutils", используемом такими программами,
           как sha1sum.

       -out filename
           Имя файла для вывода или стандартный вывод по умолчанию.

       -sign filename
           Цифровая подпись дайджеста с помощью закрытого ключа в "filename". Обратите
           внимание, что этот параметр не поддерживает закрытые ключи Ed25519 или Ed448.
           Вместо этого используйте команду pkeyutl.

       -keyform arg
           Определяет формат ключа для подписи дайджеста. Поддерживаются
           форматы DER, PEM, P12, ENGINE.

       -sigopt nm:v
           Передайте параметры алгоритму подписи во время подписи или проверки
           операций. Имена и значения этих опций зависят от алгоритма.

       -passin arg
           Источник пароля закрытого ключа. Для получения дополнительной информации
           о формате arg см. Раздел PASS PHRASE ARGUMENTS в openssl(1)..

       -verify filename
           Проверьте подпись с помощью открытого ключа в «имя файла». Вывод либо
           "Verification OK", либо "Verification Failure".

       -prverify filename
           Проверьте подпись, используя закрытый ключ в "filename".

       -signature filename
           Актуальная подпись для проверки.

       -hmac key
           Создайте хэшированный MAC, используя "key".

       -mac alg
           Создайте MAC (ключ Message Authentication Code (код аутентификации сообщения)).
           Самым популярным алгоритмом MAC является HMAC (MAC-адрес на основе хеш-функции),
           но существуют другие алгоритмы MAC, которые не основаны на хэше, например
           алгоритм gost-mac, поддерживаемый механизмом ccgost. Ключи MAC и другие
           параметры должны быть установлены через параметр -macopt.

       -macopt nm:v
           Передает параметры алгоритму MAC, заданному ключом -mac. Следующие
           параметры поддерживаются как HMAC, так и gost-mac.:

           key:string
               Указывает ключ MAC в виде буквенно-цифровой строки (используйте,
               если ключ содержит только печатные символы). Длина строки должна
               соответствовать любым ограничениям алгоритма MAC, например, ровно
               32 символа для gost-mac.

           hexkey:string
               Задает ключ MAC в шестнадцатеричной форме (две шестнадцатеричные
               цифры на байт). Длина ключа должна соответствовать любым ограничениям
               алгоритма MAC, например ровно 32 символа для gost-mac.

       -rand file...
           Файл или файлы, содержащие случайные данные, используемые для заполнения
           генератора случайных чисел. Можно указать несколько файлов, разделенных
           символом, зависящим от ОС. Разделителем является ';' для MS-Windows, ',' для
           OpenVMS и ':' для всех остальных.

       [-writerand file]
           Записывает случайные данные в указанный файл при выходе. Это может быть
           использовано с последующим флагом -rand.

       -fips-fingerprint
           Вычислить HMAC с использованием специального ключа для определенных
           операций OpenSSL-FIPS.

       -engine id
           Используйте идентификатор движка для операций (включая хранение закрытых
           ключей). Этот механизм не используется в качестве источника для алгоритмов
           дайджеста, если только он не указан в файле конфигурации или не указан также
           -engine_impl.

       -engine_impl
           При использовании с параметром -engine он также указывает на использование
           идентификатора механизма для операций дайджеста.

       file...
           Файл или файлы для дайджеста. Если файлы не указаны, то используется
           стандартный ввод.

EXAMPLES
       Чтобы создать шестнадцатеричный дайджест сообщения файла:
        openssl dgst -md5 -hex file.txt

       Чтобы подписать файл с помощью SHA-256 с выводом двоичного файла:
        openssl dgst -sha256 -sign privatekey.pem -out signature.sign file.txt

       Чтобы проверить подпись:
        openssl dgst -sha256 -verify publickey.pem \
        -signature signature.sign \
        file.txt

NOTES
       Доступные механизмы дайджеста будут зависеть от параметров, используемых
       при создании OpenSSL. Команда list digest-команды может быть использована
       для их перечисления.

       Новые или гибкие приложения должны использовать, вероятно, SHA-256. Другие
       дайджесты, в частности SHA-1 и MD5, по-прежнему широко используются для
       взаимодействия с существующими форматами и протоколами.

       При подписании файла dgst автоматически определяет алгоритм (RSA, ECC и т.п.),
       который будет использоваться для подписи, на основе информации ASN.1 личного
       ключа. При проверке подписей он обрабатывает только саму подпись RSA, DSA или
       ECDSA, а не связанные данные для идентификации подписывающего лица и алгоритма,
       используемого в таких форматах, как x.509, CMS и S/MIME.

       Источник случайных чисел требуется для определенных алгоритмов подписи, в
       частности ECDSA и DSA.

       Параметры подписи и проверки следует использовать только в том случае, если
       один файл подписывается или проверяется.

       Шестнадцатеричные подписи не могут быть проверены с использованием openssl.
       Вместо этого используйте "xxd -r" или аналогичную программу для преобразования
       шестнадцатеричной подписи в двоичную подпись до проверки.

HISTORY
       Дайджест по умолчанию был изменен с MD5 на SHA256 в OpenSSL 1.1.0. Опции,
       связанные с FIPS, были удалены в OpenSSL 1.1.0.

COPYRIGHT
       Copyright 2000-2018 The OpenSSL Project Authors. All Rights Reserved.

       Licensed under the OpenSSL license (the "License").  You may not use
       this file except in compliance with the License.  You can obtain a copy
       in the file LICENSE in the source distribution or at
       <https://www.openssl.org/source/license.html>.

1.1.1a                            2018-11-20                           DGST(1)
