CA(1SSL)                                                    OpenSSL                                                   CA(1SSL)

NAME
       ca - образец минимального приложения CA

SYNOPSIS
       openssl ca [-verbose] [-config filename] [-name section] [-gencrl] [-revoke file] [-status serial] [-updatedb]
       [-crl_reason reason] [-crl_hold instruction] [-crl_compromise time] [-crl_CA_compromise time] [-crldays days]
       [-crlhours hours] [-crlexts section] [-startdate date] [-enddate date] [-days arg] [-md arg] [-policy arg] [-keyfile
       arg] [-keyform PEM|DER] [-key arg] [-passin arg] [-cert file] [-selfsign] [-in file] [-out file] [-notext] [-outdir
       dir] [-infiles] [-spkac file] [-ss_cert file] [-preserveDN] [-noemailDN] [-batch] [-msie_hack] [-extensions section]
       [-extfile section] [-engine id] [-subj arg] [-utf8] [-multivalue-rdn]

DESCRIPTION
       Команда ca - это минимальное приложение CA. Он может использоваться для подписывания запросов сертификатов в различных
       формах и генерации списков отзыва сертификатов. Он также поддерживает текстовую базу данных выданных сертификатов и их
       статус.

       Описание опций будет разделено на каждую цель.

CA OPTIONS
       -config filename
           указывает файл конфигурации для использования.

       -name section
           определяет раздел файла конфигурации для использования (переопределяет default_ca в разделе ca).

       -in filename
           имя входного файла, содержащее запрос на один сертификат, который должен быть подписан ЦС.

       -ss_cert filename
           единый самоподписанный сертификат, подписанный ЦС.

       -spkac filename
           файл, содержащий единственный открытый ключ Netscape и вызов и дополнительные значения полей, которые должны
	   быть подписаны ЦС. Смотрите раздел SPKAC FORMAT для получения информации о требуемом формате ввода и вывода.

       -infiles
           если он присутствует, это должен быть последний вариант, все последующие аргументы предполагаются именами файлов,
	   содержащих запросы сертификата.

       -out filename
           выходной файл для вывода сертификатов. По умолчанию используется стандартный вывод. Детали сертификата также будут
	   распечатаны в этом файле в формате PEM (кроме того, что -spkac выводит формат DER).

       -outdir directory
           каталог для вывода сертификатов. Сертификат будет записан в имя файла, состоящего из серийного номера в
	   шестнадцатеричном формате с добавлением «.pem».

       -cert
           файл сертификата CA.

       -keyfile filename
           закрытый ключ для подписания запросов.

       -keyform PEM|DER
           формат данных в файле закрытого ключа. По умолчанию используется PEM.

       -key password
           пароль, используемый для шифрования закрытого ключа. Поскольку в некоторых системах аргументы командной строки
	   видны (например, Unix с утилитой «ps»), этот параметр следует использовать с осторожностью.

       -selfsign
           указывает, что выданные сертификаты должны быть подписаны с ключом, с которым были подписаны запросы сертификата
	   (с указанием в файле -keyfile). Запросы на сертификацию, подписанные другим ключом, игнорируются. Если заданы
	   -spkac, -ss_cert или -gencrl, -selfsign игнорируется.

           Последствием использования -selfsign является то, что самозаверяющий сертификат появляется среди записей в базе
	   данных сертификатов (см. Базу данных параметров конфигурации) и использует тот же счетчик серийных номеров, что
	   и все другие сертификаты, подписанные с самозаверяющим сертификатом.

       -passin arg
           ключевой пароль. Для получения дополнительной информации о формате arg см. Раздел PASS PHRASE ARGUMENTS в openssl (1).

       -verbose
           это печатает дополнительные сведения о выполняемых операциях.

       -notext
           не выводить текстовую форму сертификата в выходной файл.

       -startdate date
           это позволяет задавать дату начала срока действия. Формат даты - YYMMDDHHMMSSZ (аналогично структуре ASN1 UTCTime).

       -enddate date
           это позволяет указать дату истечения срока действия. Формат даты - YYMMDDHHMMSSZ (аналогично структуре ASN1 UTCTime).

       -days arg
           количество дней для подтверждения сертификата.

       -md alg
           полезный дайджест сообщения. Возможные значения включают md5, sha1 и mdc2. Этот параметр также применяется к CRL.

       -policy arg
           этот параметр определяет политику CA. Это раздел в файле конфигурации, который определяет, какие поля должны быть
	   обязательными или соответствовать сертификату ЦС. Ознакомьтесь с разделом POLICY FORMAT для получения дополнительной
	   информации.

       -msie_hack
           это устаревший вариант, позволяющий работать с очень старыми версиями контроля регистрации сертификатов IE «certenr3».
	   Он использовал UniversalStrings практически для всех. Поскольку у старого элемента управления есть различные ошибки
	   безопасности, его использование сильно не рекомендуется. Для нового элемента управления «Xenroll» эта опция не нужна.

       -preserveDN
           Обычно порядок DN сертификата совпадает с порядком полей в соответствующем разделе политики. Когда этот параметр
	   установлен, порядок совпадает с запросом. Это в значительной степени совместимо с более старым элементом управления
	   регистрации IE, который будет принимать сертификаты только в том случае, если их DN соответствуют порядку запроса.
	   Это не нужно для Xenroll.

       -noemailDN
           DN сертификата может содержать поле EMAIL, если оно присутствует в DN запроса, однако это хорошая политика, только
	   что электронная почта установлена ​​в расширение altName сертификата. Когда этот параметр установлен, поле EMAIL
	   удаляется из объекта сертификата и устанавливается только в расширениях, в конечном счете, существующих. Ключевое
	   слово email_in_dn можно использовать в файле конфигурации, чтобы включить это поведение.

       -batch
           это устанавливает пакетный режим. В этом режиме не будет задано никаких вопросов, и все сертификаты будут
	   автоматически сертифицированы.

       -extensions section
           раздел файла конфигурации, содержащий расширения сертификатов, которые должны быть добавлены при выдаче сертификата
	   (по умолчанию используется значение x509_extensions, если не используется опция -extfile). Если секция расширения
	   отсутствует, тогда создается сертификат V1. Если имеется расширение (даже если оно пустое), то создается сертификат
	   V3. См. Справочную страницу: w x509v3_config (5) для получения подробной информации о формате раздела расширения.

       -extfile file
           дополнительный файл конфигурации для чтения расширений сертификатов (используя раздел по умолчанию, если не
	   используется опция -extensions).

       -engine id
           указание его движка (по его уникальной строке id) приведет к попытке получить функциональную ссылку на указанный
	   движок, и при необходимости инициализирует его. Затем двигатель будет установлен по умолчанию для всех доступных
	   алгоритмов.

       -subj arg
           заменяет имя субъекта, указанное в запросе. Аргу должен быть отформатирован как / type0 = value0 / type1 = value1 /
	   type2 = ..., символы могут быть экранированы \ (обратная косая черта), пробелы не пропущены.

       -utf8
           этот параметр заставляет значения полей интерпретироваться как строки UTF8, по умолчанию они интерпретируются как
	   ASCII. Это означает, что значения полей, запрашиваемые с терминала или полученные из файла конфигурации, должны быть
	   действительными строками UTF8.

       -multivalue-rdn
           этот параметр вызывает интерпретацию аргумента -subj с полной поддержкой многозначных RDN. Пример:

           /DC=org/DC=OpenSSL/DC=users/UID=123456+CN=John Doe

           Если -multi-rdn не используется, значение UID равно 123456 + CN = John Doe.

CRL OPTIONS
       -gencrl
           этот параметр генерирует CRL на основе информации в индексном файле.

       -crldays num
           количество дней до следующего CRL. То есть дни отныне, чтобы поместить в поле CRL nextUpdate.

       -crlhours num
           количество часов до следующего CRL.

       -revoke filename
           имя файла, содержащее сертификат для отзыва.

       -status serial
           отображает статус отзыва сертификата с указанным серийным номером и выходами.

       -updatedb
           Обновляет индекс базы данных для очистки истекших сертификатов.

       -crl_reason reason
           причина отзыва, где причина одна из: unspecified, keyCompromise, CACompromise, affiliationChanged,
           superseded, cessationOfOperation, certificateHold or removeFromCRL. Согласование причины нечувствительно к
	   регистру. Установка любой причины отзыва приведет к CRL v2.
	   
           Практически removeFromCRL не особенно полезен, поскольку он используется только в Delta CRL, которые в настоящее
	   время не реализованы.

       -crl_hold instruction
           Это устанавливает код причины отзыва CRL для сертификата Hold и инструкции удержания для команды, которая должна
	   быть OID. Хотя любой OID можно использовать только holdInstructionNone (использование которого не рекомендуется
	   RFC2459) holdInstructionCallIssuer или holdInstructionReject, как правило, будет использоваться.

       -crl_compromise time
           Это устанавливает причину аннулирования keyCompromise и время компромисса. время должно быть в формате GeneralizedTime,
	   который равен YYYYMMDDHHMMSSZ.

       -crl_CA_compromise time
           Это то же самое, что и crl_compromise, за исключением того, что причина отзыва установлена ​​на CACompromise.

       -crlexts section
           раздел файла конфигурации, содержащий расширения CRL для включения. Если не существует секции расширения CRL, тогда
	   создается CRL V1, если присутствует секция расширения CRL (даже если она пуста), то создается CRL V2. Указанные
	   расширения CRL - это расширения CRL, а не расширения CRL. Следует отметить, что некоторое программное обеспечение
	   (например, Netscape) не может обрабатывать CRL V2. См. Справочную страницу x509v3_config (5) для получения подробной
	   информации о формате раздела расширения.

CONFIGURATION FILE OPTIONS
       Раздел конфигурационного файла, содержащий параметры для ca, находится следующим образом: Если используется параметр
       командной строки -name, он называет раздел, который будет использоваться. В противном случае раздел, который нужно
       использовать, должен быть указан в параметре default_ca секции ca файла конфигурации (или в разделе по умолчанию файла
       конфигурации). Помимо default_ca, следующие параметры читаются непосредственно из секции ca:
        RANDFILE  preserve
        msie_hack За исключением RANDFILE, это, вероятно, ошибка и может измениться в будущих выпусках.

       Многие параметры файла конфигурации идентичны параметрам командной строки. Если параметр присутствует в файле конфигурации
       и в командной строке используется значение командной строки. Если опция описана как обязательная, она должна присутствовать
       в файле конфигурации или эквиваленте командной строки (если таковая имеется).

       oid_file
           Это указывает файл, содержащий дополнительные ИДЕНТИФИКАТОРЫ ОБЪЕКТОВ. Каждая строка файла должна состоять из
	   числовой формы идентификатора объекта, за которой следует пробел, а затем короткое имя, а затем пробел и, наконец,
	   длинное имя.

       oid_section
           Это указывает раздел в файле конфигурации, содержащий дополнительные идентификаторы объекта. Каждая строка должна
	   состоять из краткого имени идентификатора объекта, а затем = и числовой формы. При использовании этой опции короткие
	   и длинные имена совпадают.

       new_certs_dir
           то же, что и параметр командной строки -outdir. Он указывает каталог, в котором будут размещаться новые сертификаты.
	   Обязательное.

       certificate
           так же, как -cert. Он предоставляет файл, содержащий сертификат CA. Обязательный.

       private_key
           аналогично опции -keyfile. Файл, содержащий закрытый ключ CA. Обязательный.

       RANDFILE
           файл, используемый для чтения и записи информации о количестве случайных чисел или сокета EGD (см. RAND_egd (3)).

       default_days
           так же, как и опция -days. Количество дней для подтверждения сертификата.

       default_startdate
           так же, как опция -startdate. Дата начала сертификации сертификата. Если не установлено текущее время.

       default_enddate
           аналогично опции -enddate. Должна присутствовать либо эта опция, либо default_days (или эквиваленты командной строки).

       default_crl_hours default_crl_days
           то же, что и параметры -crlhours и -crldays. Они будут использоваться только в том случае, если отсутствует опция
	   командной строки. По крайней мере, один из них должен присутствовать, чтобы создать CRL.

       default_md
           аналогично опции -md. Используемый дайджест сообщения. Обязательный.

       database
           файл текстовой базы данных для использования. Обязательный. Этот файл должен присутствовать, хотя изначально он
	   будет пустым.

       unique_subject
           если дано значение yes, то действительные записи в базе данных должны иметь уникальные объекты. если задано значение
	   no, несколько действительных записей сертификатов могут иметь один и тот же объект. Значение по умолчанию - yes,
	   чтобы быть совместимым со старыми (до 0.9.8) версиями OpenSSL. Однако, чтобы упростить проверку сертификата CA,
	   рекомендуется использовать значение no, особенно в сочетании с параметром командной строки -selfsign.

       serial
           текстовый файл, содержащий следующий серийный номер для использования в шестнадцатеричном формате. Обязательный. Этот
	   файл должен присутствовать и содержать действительный серийный номер.

       crlnumber
           текстовый файл, содержащий следующий номер CRL для использования в шестнадцатеричном формате. Номер crl будет
	   вставлен в CRL только в том случае, если этот файл существует. Если этот файл присутствует, он должен содержать
	   действительный номер CRL.

       x509_extensions
           то же самое, что и -extensions.

       crl_extensions
           так же, как -crlexts.

       preserve
           то же самое, что и -preserveDN

       email_in_dn
           так же, как -noemailDN. Если вы хотите, чтобы поле EMAIL было удалено из DN сертификата, просто установите для
	   этого значение «no». Если нет, то по умолчанию разрешено указывать EMAIL в DN сертификата.

       msie_hack
           как и -msie_hack

       policy
           как и -policy. Обязательный. Смотри POLICY FORMAT.

       name_opt, cert_opt
           эти параметры позволяют использовать формат, отображаемый для получения сведений о сертификате при запросе
	   подтверждения подписей. Все параметры, поддерживаемые утилитами x509 -nameopt и -certopt, могут использоваться
	   здесь, за исключением того, что no_signame и no_sigdump постоянно установлены и не могут быть отключены (это
	   связано с тем, что подпись сертификата не может быть отображена, поскольку сертификат не был подписан).

           Для удобства значения ca_default принимаются обоими для получения разумного выхода.

           Если ни один из параметров не присутствует, используется формат, используемый в более ранних версиях OpenSSL.
	   Использование старого формата сильно обескуражено, поскольку оно отображает только поля, упомянутые в разделе политики,
	   mishandles multicharacter string types и не отображает расширения.

       copy_extensions
           определяет, как должны обрабатываться расширения в запросах на сертификаты. Если установлено значение none или эта
	   опция отсутствует, расширения игнорируются и не копируются в сертификат. Если установлено для копирования, то все
	   экземпляры, присутствующие в запросе, которые еще не присутствуют, копируются в сертификат. Если установлено значение
	   copyall, все расширения в запросе копируются в сертификат: если расширение уже присутствует в сертификате, оно сначала
	   удаляется. Перед использованием этой опции см. Раздел ПРЕДУПРЕЖДЕНИЯ.

           Основное использование этого параметра - разрешить запросу сертификата предоставлять значения для определенных
	   расширений, таких как subjectAltName.

POLICY FORMAT
       Раздел политики состоит из набора переменных, соответствующих полям DN сертификата. Если значение «соответствует»,
       значение поля должно совпадать с тем же поле в сертификате ЦС. Если значение «поставляется», оно должно присутствовать.
       Если значение «необязательно», оно может присутствовать. Любые поля, не упомянутые в разделе политики, удаляются молча,
       если не задана опция -preserveDN, но это может рассматриваться скорее как причуда, чем предполагаемое поведение.

SPKAC FORMAT
       Вход в параметр командной строки -spkac - это открытый ключ Netscape и вызов. Обычно это происходит из тега KEYGEN в
       форме HTML, чтобы создать новый закрытый ключ. Тем не менее, можно создать SPKAC с помощью утилиты spkac.

       Файл должен содержать переменную SPKAC, установленную на значение SPKAC, а также необходимые компоненты DN в качестве
       пар значений имени. Если вам нужно включить один и тот же компонент дважды, ему может предшествовать число и «.».

       При обработке формата SPKAC вывод DER, если используется флаг -out, но используется формат PEM при отправке на stdout
       или флаг -outdir.

EXAMPLES
       Примечание. В этих примерах предполагается, что структура каталогов ca уже настроена и соответствующие файлы уже
       существуют. Обычно это включает создание сертификата ЦС и закрытого ключа с req, файла серийного номера и пустого
       индексного файла и размещения их в соответствующих каталогах.

       Чтобы использовать образец файла конфигурации нужно создать структуру каталога demoCA, demoCA/private и demoCA/newcerts.
       Сертификат ЦС нужно скопировать в demoCA/cacert.pem и его личный ключ в demoCA/private/cakey.pem. Создать файл
       demoCA/serial , например, «01», и пустой индексный файл demoCA/index.txt.

       Подписать запрос сертификата:

        openssl ca -in req.pem -out newcert.pem

       Подпишите запрос сертификата, используя расширения CA:

        openssl ca -in req.pem -extensions v3_ca -out newcert.pem

       Создание списка CRL

        openssl ca -gencrl -out crl.pem

       Подпишите несколько запросов:

        openssl ca -infiles req1.pem req2.pem req3.pem

       Сертификация Netscape SPKAC:

        openssl ca -spkac spkac.txt

       Пример файла SPKAC (для ясности линия SPKAC была усечена):

        SPKAC=MIG0MGAwXDANBgkqhkiG9w0BAQEFAANLADBIAkEAn7PDhCeV/xIxUg8V70YRxK2A5
        CN=Steve Test
        emailAddress=steve@openssl.org
        0.OU=OpenSSL Group
        1.OU=Another Group

       Пример файла конфигурации с соответствующими разделами для ca:

        [ ca ]
        default_ca      = CA_default            # Раздел ca по умолчанию

        [ CA_default ]

        dir            = ./demoCA              # корневой каталог
        database       = $dir/index.txt        # файл с базой данных подписанных сертификатов.
        new_certs_dir  = $dir/newcerts         # каталог для новых сертификатов

        certificate    = $dir/cacert.pem       # The CA cert
        serial         = $dir/serial           # файл содержащий текущий серийный номер сертификата
        private_key    = $dir/private/cakey.pem# CA private key
        RANDFILE       = $dir/private/.rand    # random number file

        default_days   = 365                   # how long to certify for
        default_crl_days= 30                   # how long before next CRL
        default_md     = md5                   # md to use

        policy         = policy_any            # default policy
        email_in_dn    = no                    # Don't add the email into cert DN

        name_opt       = ca_default            # Subject name display option
        cert_opt       = ca_default            # Certificate display option
        copy_extensions = none                 # Don't copy extensions from request

        [ policy_any ]
        countryName            = supplied
        stateOrProvinceName    = optional
        organizationName       = optional
        organizationalUnitName = optional
        commonName             = supplied
        emailAddress           = optional

FILES
       Примечание. Расположение всех файлов может быть изменено либо с помощью параметров времени компиляции, записей файла
       конфигурации, переменных среды или параметров командной строки. Значения ниже соответствуют значениям по умолчанию.

        /usr/local/ssl/lib/openssl.cnf - главный файл конфигурации
        ./demoCA                       - главный каталог CA
        ./demoCA/cacert.pem            - CA сертификат
        ./demoCA/private/cakey.pem     - CA приватный ключ
        ./demoCA/serial                - CA файл содержащий серийный номер
        ./demoCA/serial.old            - CA файл резервной копии серийного номера
        ./demoCA/index.txt             - CA текстовый файл базы данных
        ./demoCA/index.txt.old         - CA файл резервной копии текстовой базы данных
        ./demoCA/certs                 - выходной каталог файла сертификата
        ./demoCA/.rnd                  - CA случайная информация о семени

ENVIRONMENT VARIABLES
       OPENSSL_CONF отражает местоположение основного файла конфигурации, его можно переопределить с помощью параметра
       командной строки -config.

RESTRICTIONS
       Индексный файл текстовой базы данных является важной частью процесса, и если он поврежден, его трудно будет исправить.
       Теоретически возможно перестроить индексный файл из всех выпущенных сертификатов и текущего CRL: однако нет возможности
       сделать это.

       V2 CRL такие функции, как delta CRL, в настоящее время не поддерживаются.

       Хотя несколько запросов могут вводиться и обрабатываться сразу, возможно только включение одного сертификата SPKAC или
       самоподписанного сертификата.

BUGS
       The use of an in memory text database can cause problems when large numbers of certificates are present because, as the
       name implies the database has to be kept in memory.

       The ca command really needs rewriting or the required functionality exposed at either a command or interface level so a
       more friendly utility (perl script or GUI) can handle things properly. The scripts CA.sh and CA.pl help a little but
       not very much.

       Any fields in a request that are not present in a policy are silently deleted. This does not happen if the -preserveDN
       option is used. To enforce the absence of the EMAIL field within the DN, as suggested by RFCs, regardless the contents
       of the request' subject the -noemailDN option can be used. The behaviour should be more friendly and configurable.

       Cancelling some commands by refusing to certify a certificate can create an empty file.

WARNINGS
       Команда ca необычна и порой совершенно недружелюбна.

       Первоначально утилита ca была предназначена как пример того, как делать вещи в CA. Он не должен был использоваться как
       полномасштабный СА: тем не менее некоторые люди используют его для этой цели.

       Команда ca фактически представляет собой единую команду пользователя: блокировка не выполняется в разных файлах, и
       попытки запустить более одной команды ca в одной базе данных могут иметь непредсказуемые результаты.

       Параметр copy_extensions следует использовать с осторожностью. Если уход не выполняется, это может быть угрозой
       безопасности. Например, если запрос сертификата содержит расширение basicConstraints с CA: TRUE, а для значения
       copy_extensions установлено значение copyall, и пользователь не обнаруживает это при отображении сертификата, тогда это
       передаст запрашивающему лицу действительный сертификат CA.

       Эту ситуацию можно избежать, установив copy_extensions для копирования и включения basicConstraints с CA: FALSE в файле
       конфигурации. Тогда, если запрос содержит расширение basicConstraints, он будет проигнорирован.

       Целесообразно также включать значения для других расширений, таких как keyUsage, чтобы предотвратить запрос,
       предоставляющий свои собственные значения.

       Дополнительные ограничения могут быть помещены на сертификат СА. Например, если сертификат CA имеет:

        basicConstraints = CA:TRUE, pathlen:0

       то даже если сертификат выдается с CA: TRUE, он недействителен.

SEE ALSO
       req(1), spkac(1), x509(1), CA.pl(1), config(5), x509v3_config(5)

1.0.2g                                                    2016-03-01                                                  CA(1SSL)
